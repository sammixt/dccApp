@model com.dcc.Entities.Member

@{
    ViewBag.Title = "Assign Member to Unit";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<SelectListItem> Group = new List<SelectListItem>();
    Group.Add(new SelectListItem { Text = "A", Value = "A" });
    Group.Add(new SelectListItem { Text = "B", Value = "B" });
    Group.Add(new SelectListItem { Text = "C", Value = "C" });
    Group.Add(new SelectListItem { Text = "D", Value = "D" });
    
}
<div class="content-wrapper">
    <section class="content-header">
        <h1>
            Assign User to Unit
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li class="active">Assign User to Unit</li>
        </ol>
    </section>
    <section class="content">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <a href="@Url.Action("MemberDetail", "DepartmentalUsers", new { MemberId = @ViewBag.Believer.MemberId })" class="btn btn-sm btn-success">User Detail</a>
                    </div>
                    @using (Html.BeginForm("AssignToUnit", "DepartmentalUsers", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { id = "loginForm", role = "form" }))
                    {
                        <div class="box-body">
                            <div class="col-md-8 col-md-offset-2">
                                @Html.AntiForgeryToken()
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.BelieverId, new { @Value = @ViewBag.Believer.MemberId })
                                @Html.HiddenFor(model => model.MemberId)
                                <div class="form-group">
                                    <label class="control-label col-md-2">Member</label>
                                    <div class="col-md-10">
                                        <p class="form-control-static text-bold text-uppercase text-info">@ViewBag.Believer.FirstName @ViewBag.Believer.LastName </p>
                                    </div>
                                    <div class="clearfix"></div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Department</label>
                                    <div class="col-md-10">
                                        <p class="form-control-static text-bold text-uppercase text-info">@Html.DisplayFor(model => model.Department.DeptName)</p>
                                    </div>
                                    <div class="clearfix"></div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Select Unit</label>
                                    <div class="col-md-10">
                                        <select required name="UnitId" id="UnitId" class="form-control">
                                            <option></option>
                                            @foreach (var item in ViewBag.Units)
                                            {
                                                <option @(Model.UnitId != null?(Model.UnitId== item.UnitId?"selected='selected'":""):"")value="@item.UnitId">@item.UnitName</option>
                                            }
                                        </select>

                                    </div>
                                    <div class="clearfix"></div>
                                </div>

                                <div class="form-group">
                                    <label class="control-label col-md-2">Select Post</label>
                                    <div class="col-md-10">
                                        <select required name="Post" id="Post" class="form-control">
                                            <option></option>
                                            @foreach (var item in ViewBag.Post)
                                            {
                                                <option @(Model.Post != null ? (Model.Post == item.PostId ? "selected='selected'" : "") : "") value="@item.PostId">@item.PostName</option>
                                            }
                                        </select>

                                    </div>
                                    <div class="clearfix"></div>
                                </div>

                                <div class="form-group">
                                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="clearfix"></div>
                                    </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Groups, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownListFor(model => model.Groups, Group, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Groups, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="clearfix"></div>
                                </div>

                                <div class="form-group">
                                        @Html.LabelFor(model => model.ProbationStatus, htmlAttributes: new { @class = "control-label col-md-2",@required = "required" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.ProbationStatus, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ProbationStatus, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="clearfix"></div>
                                    </div>
                                @if (@ViewBag.Error != null)
                                {
                                    <div class="form-group">
                                        <p class="form-control-static text-danger text-uppercase">
                                            @ViewBag.Error
                                        </p>
                                    </div>
                                }
                                <div class="col-md-4 col-md-offset-4">
                                    <button type="submit" class="btn btn-primary">Submit</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </section>
</div>